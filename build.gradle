import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'application'
}

repositories {
    mavenCentral()
}

checkstyle {
    configFile file('./config/checkstyle/checkstyle.xml')
    toolVersion '8.29'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

application.mainClassName 'caves.Application'

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

def final implementationModules = ['', '-glfw', '-stb', '-vulkan', '-shaderc']
def final runtimeModules = ['', '-glfw', '-stb', '-shaderc']

dependencies {
    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jUnitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"

    // FindBugs Annotations
    implementation "com.google.code.findbugs:jsr305:3.0.2"

    // LWJGL 3 (Minimal Vulkan)
    implementation platform("org.lwjgl:lwjgl-bom:${lwjglVersion}")
    for (modulePostfix in implementationModules) { implementation "org.lwjgl:lwjgl${modulePostfix}" }
    for (modulePostfix in runtimeModules) { runtimeOnly "org.lwjgl:lwjgl${modulePostfix}::${lwjglNatives}" }
    if (lwjglNatives == "natives-macos") runtimeOnly "org.lwjgl:lwjgl-vulkan::${lwjglNatives}"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        stackTraceFilters = []
    }
}

check.dependsOn jacocoTestReport
